generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = "sqlserver://aws.ivmtech.com:21433;database=iVendingDB_AICabinet;user=sa;password=Ivm.98123316;encrypt=true;trustServerCertificate=true;connection_limit=5"
}

model Profile {
  profileID String   @id @unique
  desc      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userID    String   @unique
  user      User     @relation(fields: [userID], references: [userID])
}

model Machine {
  machineID             String                  @id @unique
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  serverToken           String
  location              String
  ownerID               String                  @unique
  status                String
  config                String                  @db.VarChar(8000)
  remark                String?
  owner                 User                    @relation(fields: [ownerID], references: [userID])
  machinePalletDetail   MachinePalletDetail?
  machineProductSummary MachineProductSummary[]
}

model MasterProduct {
  productID             String                  @id @unique
  isActive              Boolean                 @default(true)
  suspend               Boolean                 @default(false)
  productName           String?
  productNameEn         String?
  desc                  String?
  descEn                String?
  price                 Decimal
  unitPrice             Decimal
  unit                  String?
  currency              String
  remark                String
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  machinePalletDetails  MachinePalletDetail?
  machineProductSummary MachineProductSummary[]
}

model MachinePalletDetail {
  palletDetailID String        @id @unique
  machineID      String        @unique
  palletID       Int
  status         String
  description    String
  productID      String        @unique
  inventory      Int
  price          Decimal
  weight         Decimal
  machine        Machine       @relation(fields: [machineID], references: [machineID])
  masterProduct  MasterProduct @relation(fields: [productID], references: [productID])
}

model MachineProductSummary {
  summaryID     String        @id @unique
  machineID     String
  productID     String
  machine       Machine       @relation(fields: [machineID], references: [machineID])
  masterProduct MasterProduct @relation(fields: [productID], references: [productID])
}

model Transaction {
  transactionID String @id @unique
}

model UserSession {
  userID      String   @unique
  token       String
  expiredDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userID], references: [userID])
}

model User {
  userID        String       @id @unique
  username      String       @unique
  password      String
  name          String
  nameEn        String
  authenticated Boolean
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  userRoleID    Int
  userTypeID    Int
  machine       Machine?
  profile       Profile?
  userRole      UserRole     @relation(fields: [userRoleID], references: [userRoleID])
  userType      UserType     @relation(fields: [userTypeID], references: [userTypeID])
  userSession   UserSession?
}

model UserType {
  userTypeID   Int    @id @unique @default(autoincrement())
  userTypeName String
  users        User[]
}

model UserRole {
  userRoleID   Int    @id @unique @default(autoincrement())
  userRoleName String
  users        User[]
}

model SystemConstant {
  constantID Int     @id(map: "SystemConstant_PK")
  Json       String? @db.VarChar(Max)
}
