generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = "sqlserver://aws.ivmtech.com:21433;database=iVendingDB_AICabinet;user=sa;password=Ivm.98123316;encrypt=true;trustServerCertificate=true;connection_limit=5"
}

model Profile {
  profileID        Int      @id @unique @default(autoincrement())
  profileDisplayID String   @unique @db.VarChar(20)
  desc             String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userID           Int      @unique
  user             User     @relation(fields: [userID], references: [userID])
}

model MachineType {
  machineTypeID        Int       @id @unique @default(autoincrement())
  machineTypeName      String    @db.NVarChar(50)
  machineTypeNameEn    String    @db.VarChar(50)
  machineTypeDisplayID String?   @unique @db.VarChar(21)
  Machine              Machine[]
}

model Machine {
  machineID             Int                     @id @unique @default(autoincrement())
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  serverToken           String?                 @unique @db.VarChar(8000)
  location              String?                 @db.VarChar(10)
  ownerID               Int
  status                String                  @db.VarChar(10)
  config                String?                 @db.VarChar(8000)
  remark                String?                 @db.VarChar(255)
  palletNo              Int
  machineTypeID         Int
  machineName           String                  @db.NVarChar(50)
  machineNameEn         String                  @db.VarChar(50)
  isActive              Boolean                 @default(false)
  socketID              String?                 @db.VarChar(30)
  machineDisplayID      String?                 @unique @db.VarChar(21)
  machineType           MachineType             @relation(fields: [machineTypeID], references: [machineTypeID])
  owner                 User                    @relation(fields: [ownerID], references: [userID])
  machinePalletDetail   MachinePalletDetail[]
  machineProductSummary MachineProductSummary[]
  OperationHistory      OperationHistory[]
  replenishment         Replenishment[]
  Transaction           Transaction[]
  attachments           Attachment[]            @relation("AttachmentToMachine")
}

model Replenishment {
  replenishmentID Int      @id @unique @default(autoincrement())
  machineID       Int
  details         String   @db.VarChar(Max)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userID          Int
  machine         Machine  @relation(fields: [machineID], references: [machineID], onUpdate: NoAction)
  user            User     @relation(fields: [userID], references: [userID], onUpdate: NoAction)
}

model MasterProduct {
  productID             Int                     @id @unique @default(autoincrement())
  isActive              Boolean                 @default(true)
  suspend               Boolean                 @default(false)
  productName           String                  @db.NVarChar(50)
  productNameEn         String                  @db.VarChar(50)
  desc                  String?                 @db.NVarChar(255)
  descEn                String?                 @db.VarChar(255)
  price                 Decimal                 @db.Decimal(32, 2)
  unitPrice             Decimal                 @db.Decimal(32, 2)
  unit                  String?                 @db.NVarChar(10)
  currency              String?                 @db.NVarChar(10)
  remark                String?                 @db.NVarChar(255)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  attachmentID          Int
  cost                  Decimal?                @db.Decimal(32, 2)
  weight                Decimal                 @db.Decimal(32, 3)
  abbreviation          String                  @default("PRD") @db.VarChar(3)
  clientRefID           String?                 @db.NVarChar(255)
  productDisplayID      String?                 @unique @db.VarChar(21)
  machinePalletDetails  MachinePalletDetail[]
  machineProductSummary MachineProductSummary[]
  attachment            Attachment              @relation(fields: [attachmentID], references: [attachmentID], onDelete: Cascade)
  Transaction           Transaction[]
}

model MachinePalletDetail {
  palletDetailID        Int           @id @unique @default(autoincrement())
  machineID             Int
  palletID              Int
  status                String
  description           String?
  productID             Int
  inventory             Decimal
  price                 Decimal
  weightPerUnit         Decimal
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  attachmentID          Int?
  palletDetailDisplayID String?       @unique @db.VarChar(21)
  weightInPallet        Decimal?
  attachment            Attachment?   @relation(fields: [attachmentID], references: [attachmentID], onDelete: Cascade)
  machine               Machine       @relation(fields: [machineID], references: [machineID], onUpdate: NoAction)
  masterProduct         MasterProduct @relation(fields: [productID], references: [productID], onUpdate: NoAction)
}

model MachineProductSummary {
  summaryID        Int           @id @unique @default(autoincrement())
  summaryDisplayID String        @unique @db.VarChar(20)
  machineID        Int
  productID        Int
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  machine          Machine       @relation(fields: [machineID], references: [machineID], onUpdate: NoAction)
  masterProduct    MasterProduct @relation(fields: [productID], references: [productID], onUpdate: NoAction)
}

model Transaction {
  transactionID        Int           @id @unique @default(autoincrement())
  transactionDisplayID String        @unique @db.VarChar(20)
  machineID            Int
  productID            Int
  machine              Machine       @relation(fields: [machineID], references: [machineID], onUpdate: NoAction)
  masterProduct        MasterProduct @relation(fields: [productID], references: [productID], onUpdate: NoAction)
}

model UserSession {
  userID       Int      @unique
  refreshToken String
  expiredDate  DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userID], references: [userID])
}

model User {
  userID           Int                @id(map: "User_PK") @unique @default(autoincrement())
  username         String             @unique @db.VarChar(255)
  password         String             @db.VarChar(255)
  name             String             @db.NVarChar(20)
  nameEn           String             @db.VarChar(20)
  authenticated    Boolean
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  userRoleID       Int
  userTypeID       Int
  userDisplayID    String?            @unique @db.VarChar(21)
  machine          Machine[]
  OperationHistory OperationHistory[]
  profile          Profile?
  Replenishment    Replenishment[]
  userRole         UserRole           @relation(fields: [userRoleID], references: [userRoleID])
  userType         UserType           @relation(fields: [userTypeID], references: [userTypeID])
  userSession      UserSession?
}

model UserType {
  userTypeID   Int    @id @unique @default(autoincrement())
  userTypeName String @db.VarChar(20)
  users        User[]
}

model UserRole {
  userRoleID   Int    @id @unique @default(autoincrement())
  userRoleName String @db.VarChar(20)
  users        User[]
}

model SystemConstant {
  constantID Int     @id(map: "SystemConstant_PK")
  Json       String? @db.VarChar(Max)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Attachment {
  attachmentID        Int                   @id @unique @default(autoincrement())
  type                String                @db.VarChar(10)
  name                String                @db.VarChar(50)
  tableName           String                @db.VarChar(20)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  tableUsage          String?               @db.VarChar(20)
  attachmentDisplayID String?               @unique @db.VarChar(21)
  MachinePalletDetail MachinePalletDetail[]
  MasterProduct       MasterProduct[]
  Machine             Machine[]             @relation("AttachmentToMachine")
}

model OperationHistory {
  historyID Int      @id @unique @default(autoincrement())
  action    String   @db.VarChar(20)
  userID    Int
  duration  Int
  machineID Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  machine   Machine  @relation(fields: [machineID], references: [machineID], onUpdate: NoAction)
  user      User     @relation(fields: [userID], references: [userID])
}

model AutoIncrement {
  incrementId  Int @id @unique
  machine      Int
  palletDetail Int
  summary      Int
  transaction  Int
  user         Int
  attachment   Int
}

model Abbreviation {
  abbreviationID   Int    @id @unique @default(autoincrement())
  abbreviationType String @db.VarChar(10)
  word             String @db.VarChar(255)
  abbreviationName String @unique @db.VarChar(5)
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61401D00F1") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}
